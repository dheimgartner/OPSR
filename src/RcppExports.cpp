// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// loglik
arma::colvec loglik(NumericVector& theta, arma::field<arma::mat>& W, arma::field<arma::mat>& X, arma::field<arma::colvec>& Y, arma::colvec& weights, int nReg, int nObs);
RcppExport SEXP _OPSR_loglik(SEXP thetaSEXP, SEXP WSEXP, SEXP XSEXP, SEXP YSEXP, SEXP weightsSEXP, SEXP nRegSEXP, SEXP nObsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::mat>& >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::mat>& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::colvec>& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< int >::type nReg(nRegSEXP);
    Rcpp::traits::input_parameter< int >::type nObs(nObsSEXP);
    rcpp_result_gen = Rcpp::wrap(loglik(theta, W, X, Y, weights, nReg, nObs));
    return rcpp_result_gen;
END_RCPP
}
// opsr_prepare_coefs
List opsr_prepare_coefs(NumericVector& theta, int& nReg);
RcppExport SEXP _OPSR_opsr_prepare_coefs(SEXP thetaSEXP, SEXP nRegSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int& >::type nReg(nRegSEXP);
    rcpp_result_gen = Rcpp::wrap(opsr_prepare_coefs(theta, nReg));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_OPSR_loglik", (DL_FUNC) &_OPSR_loglik, 7},
    {"_OPSR_opsr_prepare_coefs", (DL_FUNC) &_OPSR_opsr_prepare_coefs, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_OPSR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
